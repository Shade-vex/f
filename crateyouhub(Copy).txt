local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "üî∞ Kzu Hub [Free] | Game üî∞", -- T√™n hub c·ªßa b·∫°n trong menu
   LoadingTitle = "üî∞ Kzu hub [Free] üî∞", -- T√™n hub c·ªßa b·∫°n trong khi load
   LoadingSubtitle = "by Kzu123",
   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil, -- T·∫°o th∆∞ m·ª•c t√πy ch·ªânh cho hub/game c·ªßa b·∫°n
      FileName = "Example Hub"
   },
   Discord = {
      Enabled = true,       
      Invite = "noinvitelink", -- Link m·ªùi v√†o Discord c·ªßa b·∫°n ho·∫∑c th·ª© kh√°c
      RememberJoins = true -- Ch·ªânh th√†nh false ƒë·ªÉ h·ªç tham gia Discord ho·∫∑c th·ª© kh√°c
   },
   KeySystem = true, -- Chuy·ªÉn th√†nh true ƒë·ªÉ t·∫°o gui nh·∫≠p key v√† false ƒë·ªÉ t·∫Øt gui
   KeySettings = {
      Title = "Key | Kzu Hub", -- T√™n 
      Subtitle = "Nh·∫≠p key t·∫°i ƒë√¢y.", -- ch√∫ th√≠ch
      Note = "Key ·ªü trong Discord", 
      FileName = "YoutubeHubKey1", -- N√™n s·ª≠ d·ª•ng m·ªôt c√°i g√¨ ƒë√≥ ƒë·ªôc ƒë√°o v√¨ c√°c t·∫≠p l·ªánh kh√°c s·ª≠ d·ª•ng Rayfield c√≥ th·ªÉ ghi ƒë√® l√™n t·ªáp kh√≥a c·ªßa b·∫°n
      SaveKey = true, -- Chuy·ªÉn th√†nh true ƒë·ªÉ l∆∞u key khi nh·∫≠p kh√¥ng c·∫ßn nh·∫≠p l·∫°i nh∆∞ng khi ƒë·ªïi key th√¨ s·∫Ω kh√¥ng ƒë∆∞·ª£c l∆∞u (c·∫≠p nh·∫≠t file m√† key v·∫´n th·∫ø th√¨ v·∫´n ƒë∆∞·ª£c l∆∞u)
      GrabKeyFromSite = true, -- !Kh√¥ng qu√° quan tr·ªçng!
      Key = {"Free_kkkkkk"} -- T·∫°o key c·ªßa b·∫°n (v√≠ d·ª•: 1234) ho·∫∑c c√≥ th·ªÉ vi·∫øt key c·ªßa b·∫°n v√†o link pastebin, github etc r·ªìi d√°n v√†o 
   }
})

local MainTab = Window:CreateTab("üè†MAIN", nil) -- Code t·∫°o tab , vi·∫øt t√™n tab + emoji ƒë·ªÅu ƒë∆∞·ª£c
local MainSection = MainTab:CreateSection("Main")

Rayfield:Notify({
   Title = "ƒê√£ t·∫£i xong script", -- th√¥ng b√°o sau khi t·∫£i xong script
   Content = "T√°c gi·∫£ : Kzu123", -- ch√∫ th√≠ch nho nh·ªè
   Duration = 5,
   Image = 13047715178,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Okay!",
         Callback = function()
         print("The user tapped Okay!")
      end
   },
},
})

local Button = MainTab:CreateButton({
   Name = "Infinite Jump Toggle",
   Callback = function()
       --Toggles the infinite jump between on or off on every script run
_G.infinjump = not _G.infinjump

if _G.infinJumpStarted == nil then
	--Ensures this only runs once to save resources
	_G.infinJumpStarted = true
	
	--Notifies readiness
	game.StarterGui:SetCore("SendNotification", {Title="Youtube Hub"; Text="Infinite Jump Activated!"; Duration=5;})

	--The actual infinite jump
	local plr = game:GetService('Players').LocalPlayer
	local m = plr:GetMouse()
	m.KeyDown:connect(function(k)
		if _G.infinjump then
			if k:byte() == 32 then
			humanoid = game:GetService'Players'.LocalPlayer.Character:FindFirstChildOfClass('Humanoid')
			humanoid:ChangeState('Jumping')
			wait()
			humanoid:ChangeState('Seated')
			end
		end
	end)
end
   end,
})

local Slider = MainTab:CreateSlider({
   Name = "WalkSpeed Slider",
   Range = {1, 350},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "sliderws", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
   end,
})

local Slider = MainTab:CreateSlider({
   Name = "JumpPower Slider",
   Range = {1, 350},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "sliderjp", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = (Value)
   end,
})

local Dropdown = MainTab:CreateDropdown({
   Name = "Select Area",
   Options = {"Starter World","Pirate Island","Pineapple Paradise"},
   CurrentOption = {"Starter World"},
   MultipleOptions = false,
   Flag = "dropdownarea", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Option)
        print(Option)
   end,
})

local Input = MainTab:CreateInput({
   Name = "Walkspeed",
   PlaceholderText = "1-500",
   RemoveTextAfterFocusLost = true,
   Callback = function(Text)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Text)
   end,
})

local OtherSection = MainTab:CreateSection("Other")

local Toggle = MainTab:CreateToggle({
   Name = "Auto Farm",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
        print("FARMING")
   end,
})

local TPTab = Window:CreateTab("üèù Teleports", nil) -- Title, Image

local Button1 = TPTab:CreateButton({
   Name = "Starter Island",
   Callback = function()
        --Teleport1
   end,
})

local Button2 = TPTab:CreateButton({
   Name = "Pirate Island",
   Callback = function()
        --Teleport2
   end,
})

local Button3 = TPTab:CreateButton({
   Name = "Pineapple Paradise",
   Callback = function()
        --Teleport3
   end,
})




local PVP_Tab = Window:CreateTab("‚öîÔ∏èPVP", nil)

-- ƒê·∫£m b·∫£o Tab PVP ƒë√£ t·ªìn t·∫°i
if not PVP_Tab then
    PVP_Tab = Window:CreateTab("‚öîÔ∏èPVP", nil) -- N·∫øu tab ch∆∞a c√≥, t·∫°o m·ªõi
end

-- C√†i ƒë·∫∑t m·∫∑c ƒë·ªãnh cho AimBot
getgenv().setting = {
    Fov = 50,
    Color = Color3.fromRGB(191, 255, 209),
    LockPlayers = false,
    LockPlayersBind = Enum.KeyCode.L,
    resetPlayersBind = Enum.KeyCode.P,
}

local Playersaimbot = nil
local mouse = game.Players.LocalPlayer:GetMouse()
local players = game:GetService("Players")
local localPlayer = players.LocalPlayer
local currentCamera = game:GetService("Workspace").CurrentCamera
local circle = Drawing.new("Circle")
local AimBotEnabled = false

-- Hi·ªÉn th·ªã th√¥ng b√°o khi b·∫≠t AimBot
local function showAimBotNotification()
    local gui = Instance.new("ScreenGui")
    gui.Parent = game.Players.LocalPlayer:FindFirstChildOfClass("PlayerGui") or game.CoreGui

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0, 300, 0, 50)
    label.Position = UDim2.new(0.5, -150, 0.4, 0)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.new(0, 255, 0)
    label.TextStrokeTransparency = 0
    label.TextStrokeColor3 = Color3.new(0, 0, 0)
    label.TextScaled = true
    label.Font = Enum.Font.SourceSansBold
    label.Text = "Kzu Hub Aim [free]"
    label.Parent = gui

    spawn(function()
        wait(3)
        label:Destroy()
        gui:Destroy()
    end)
end

-- Hi·ªÉn th·ªã v√≤ng tr√≤n trong 1 gi√¢y r·ªìi ·∫©n ƒëi
function showCircleOnce()
    circle.Transparency = 1
    circle.Visible = true
    circle.Thickness = 2
    circle.Color = getgenv().setting.Color
    circle.NumSides = 100
    circle.Radius = (getgenv().setting.Fov * 6) / 2
    circle.Filled = false
    circle.Position = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y / 2)

    spawn(function()
        wait(1) -- ·∫®n v√≤ng tr√≤n sau 1 gi√¢y
        circle.Visible = false
    end)
end

-- X√°c ƒë·ªãnh m·ª•c ti√™u
spawn(function()
    while wait() do
        if AimBotEnabled then
            for _, v in pairs(players:GetPlayers()) do
                if v ~= localPlayer and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                    local pos = currentCamera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
                    local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(mouse.X, mouse.Y)).Magnitude
                    if magnitude < (getgenv().setting.Fov * 6 - 8) / 2 then
                        if (v.Character.HumanoidRootPart.Position - localPlayer.Character.HumanoidRootPart.Position).Magnitude <= 1000 then
                            if not getgenv().setting.LockPlayers then
                                Playersaimbot = v.Name
                            end
                        end
                    end
                end
            end
        end
    end
end)

-- Hook v√†o RemoteEvent ƒë·ªÉ t·ª± ƒë·ªông nh·∫Øm
spawn(function()
    local gg = getrawmetatable(game)
    local old = gg.__namecall
    setreadonly(gg, false)
    gg.__namecall = newcclosure(function(...)
        local method = getnamecallmethod()
        local args = { ... }
        if tostring(method) == "FireServer" and tostring(args[1]) == "RemoteEvent" then
            if AimBotEnabled and Playersaimbot then
                args[2] = players:FindFirstChild(Playersaimbot).Character.HumanoidRootPart.Position
                return old(unpack(args))
            end
        end
        return old(...)
    end)
end)

-- ƒêi·ªÅu khi·ªÉn b·∫≠t/t·∫Øt AimBot b·∫±ng ph√≠m
game:GetService("UserInputService").InputBegan:Connect(function(io, p)
    if io.KeyCode == getgenv().setting.LockPlayersBind then
        AimBotEnabled = not AimBotEnabled
        if AimBotEnabled then
            showAimBotNotification()
            showCircleOnce() -- G·ªçi h√†m hi·ªÉn th·ªã v√≤ng tr√≤n trong 1 gi√¢y
        end
    end
    if io.KeyCode == getgenv().setting.resetPlayersBind then
        Playersaimbot = nil
        print("Reset AimBot Target")
    end
end)

-- **Th√™m Toggle v√†o PVP Tab**
local ToggleAimbot = PVP_Tab:CreateToggle({
    Name = "Aimbot Skill",
    CurrentValue = false,
    Flag = "ToggleAimbot",
    Callback = function(Value)
        AimBotEnabled = Value
        if AimBotEnabled then
            showAimBotNotification()
            showCircleOnce() -- G·ªçi h√†m hi·ªÉn th·ªã v√≤ng tr√≤n trong 1 gi√¢y
        end
    end,
})






local flyEnabled = false
local flyScript = "https://rawscripts.net/raw/Universal-Script-Mobile-Fly-20327"

local Toggle = PVP_Tab:CreateToggle({
   Name = "Fly [VIP]",  -- T√™n c·ªßa n√∫t
   CurrentValue = false,  -- M·∫∑c ƒë·ªãnh t·∫Øt
   Flag = "Fly_Toggle",  -- Flag nh·∫≠n di·ªán toggle
   Callback = function(Value)
        flyEnabled = Value
        if flyEnabled then
            loadstring(game:HttpGet(flyScript))()  -- T·∫£i v√† ch·∫°y script Fly khi b·∫≠t
        end
   end,
})






local aimlockEnabled = false
local aimlockScript = "https://raw.githubusercontent.com/Shade-vex/b/refs/heads/main/Aimlock.txt"

local Toggle = PVP_Tab:CreateToggle({
   Name = "Aimlock",  -- T√™n c·ªßa n√∫t toggle
   CurrentValue = false,  -- Gi√° tr·ªã ban ƒë·∫ßu c·ªßa n√∫t
   Flag = "Aimlock_Toggle",  -- D√πng flag ƒë·ªÉ x√°c ƒë·ªãnh
   Callback = function(Value)
        aimlockEnabled = Value
        if aimlockEnabled then
            loadstring(game:HttpGet(aimlockScript))()  -- T·∫£i v√† ch·∫°y script Aimlock khi b·∫≠t
        end
   end,
})







-- ƒê·∫£m b·∫£o Tab PVP ƒë√£ t·ªìn t·∫°i
if not PVP_Tab then
    PVP_Tab = Window:CreateTab("‚öîÔ∏èPVP", nil) -- N·∫øu tab ch∆∞a c√≥, t·∫°o m·ªõi
end

local hitboxEnabled = false  -- Bi·∫øn ƒë·ªÉ b·∫≠t/t·∫Øt hitbox
local hitboxSize = Vector3.new(70, 70, 70)  -- K√≠ch th∆∞·ªõc hitbox x70
local transparency = 0.5  -- ƒê·ªô trong su·ªët c·ªßa hitbox (0 l√† kh√¥ng trong su·ªët, 1 l√† v√¥ h√¨nh)
local hitboxLoopRunning = false  -- Bi·∫øn ki·ªÉm so√°t v√≤ng l·∫∑p ki·ªÉm tra hitbox

-- H√†m ch·ªânh hitbox c·ªßa ng∆∞·ªùi ch∆°i kh√°c
local function setHitbox(player)
    if player == game.Players.LocalPlayer then return end  
    local character = player.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        local rootPart = character.HumanoidRootPart
        rootPart.Size = hitboxSize
        rootPart.Transparency = transparency
        rootPart.CanCollide = false
    end
end

-- Ki·ªÉm tra v√† c·∫≠p nh·∫≠t hitbox cho t·∫•t c·∫£ ng∆∞·ªùi ch∆°i
local function checkAndSetHitboxes()
    if hitboxEnabled then
        for _, player in pairs(game.Players:GetPlayers()) do
            if player.Character then
                setHitbox(player)
            end
        end
    end
end

-- Hi·ªÉn th·ªã ch·ªØ b·∫£y m√†u khi b·∫≠t hitbox
local function showRainbowText()
    local gui = Instance.new("ScreenGui", game.Players.LocalPlayer.PlayerGui)
    local label = Instance.new("TextLabel", gui)

    label.Size = UDim2.new(0.4, 0, 0.1, 0)
    label.Position = UDim2.new(0.3, 0, 0.4, 0)
    label.Text = "Kzu hub Hitbox"
    label.Font = Enum.Font.SourceSansBold
    label.TextScaled = true
    label.BackgroundTransparency = 1
    label.TextStrokeTransparency = 0
    label.TextColor3 = Color3.new(1, 0, 0)

    local colors = {
        Color3.new(1, 0, 0),  Color3.new(1, 0.5, 0),
        Color3.new(1, 1, 0),  Color3.new(0, 1, 0),
        Color3.new(0, 1, 1),  Color3.new(0, 0, 1),
        Color3.new(0.5, 0, 1)
    }

    task.spawn(function()
        for i = 1, 30 do
            label.TextColor3 = colors[(i % #colors) + 1]
            wait(0.1)
        end
        gui:Destroy()
    end)
end

-- H√†m b·∫≠t/t·∫Øt hitbox
local function toggleHitbox()
    hitboxEnabled = not hitboxEnabled
    if hitboxEnabled then
        checkAndSetHitboxes()

        game.Players.PlayerAdded:Connect(function(player)
            player.CharacterAdded:Connect(function()
                wait(3)
                setHitbox(player)
            end)
        end)

        game.Players.PlayerAdded:Connect(function(player)
            player.CharacterAdded:Connect(function()
                wait(3)
                setHitbox(player)
            end)
        end)

        showRainbowText()

        hitboxLoopRunning = true
        while hitboxLoopRunning do
            wait(1)
            checkAndSetHitboxes()
        end
    else
        hitboxLoopRunning = false
        for _, player in pairs(game.Players:GetPlayers()) do
            if player ~= game.Players.LocalPlayer then
                local character = player.Character
                if character and character:FindFirstChild("HumanoidRootPart") then
                    local rootPart = character.HumanoidRootPart
                    rootPart.Size = Vector3.new(2, 2, 1)
                    rootPart.Transparency = 0
                end
            end
        end
    end
end

-- **Thay th·∫ø n√∫t c≈© b·∫±ng Toggle m·ªõi trong Tab PVP**
local ToggleHitbox = PVP_Tab:CreateToggle({
    Name = "Super Hitbox",
    CurrentValue = false,
    Flag = "ToggleHitbox",
    Callback = function(Value)
        toggleHitbox()
    end,
})






local espEnabled = false -- Tr·∫°ng th√°i b·∫≠t/t·∫Øt ESP
local connections = {} -- L∆∞u c√°c k·∫øt n·ªëi ƒë·ªÉ ng·∫Øt khi c·∫ßn

local function createESP(player)
    if player == game.Players.LocalPlayer then return end -- Kh√¥ng hi·ªÉn th·ªã b·∫£n th√¢n

    local function updateESP()
        local character = player.Character
        if not character or not character:FindFirstChild("HumanoidRootPart") then return end

        local billboard = Instance.new("BillboardGui")
        billboard.Adornee = character.HumanoidRootPart
        billboard.Size = UDim2.new(0, 200, 0, 50)
        billboard.StudsOffset = Vector3.new(0, 3, 0)
        billboard.AlwaysOnTop = true

        local textLabel = Instance.new("TextLabel", billboard)
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.BackgroundTransparency = 1
        textLabel.TextColor3 = Color3.new(0, 255, 0) -- M√†u xanh l√°
        textLabel.TextScaled = false
        textLabel.TextSize = 20
        textLabel.Font = Enum.Font.SourceSansBold
        textLabel.TextStrokeTransparency = 0.2
        billboard.Parent = character.HumanoidRootPart

        -- C·∫≠p nh·∫≠t v·ªã tr√≠ & gi·ªØ nguy√™n k√≠ch th∆∞·ªõc theo kho·∫£ng c√°ch
        spawn(function()
            while espEnabled and character and character:FindFirstChild("Humanoid") and character:FindFirstChild("HumanoidRootPart") do
                local humanoid = character:FindFirstChild("Humanoid")
                local localPlayer = game.Players.LocalPlayer
                if localPlayer and localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart") then
                    local distance = (localPlayer.Character.HumanoidRootPart.Position - character.HumanoidRootPart.Position).Magnitude
                    local size = 15
                    billboard.Size = UDim2.new(0, size * 10, 0, size * 2)
                    textLabel.Text = string.format("[%s] HP: %d | %dm", player.Name, math.floor(humanoid.Health), math.floor(distance))
                end
                wait(0.1)
            end
            billboard:Destroy()
        end)
    end

    -- G√°n ESP khi nh√¢n v·∫≠t m·ªõi spawn
    if not connections[player] then
        connections[player] = player.CharacterAdded:Connect(function()
            if espEnabled then
                wait(1) -- ƒê·ª£i nh√¢n v·∫≠t load xong
                updateESP()
            end
        end)
    end

    -- N·∫øu nh√¢n v·∫≠t ƒë√£ t·ªìn t·∫°i, t·∫°o ESP lu√¥n
    if player.Character then
        updateESP()
    end
end

-- H√†m b·∫≠t/t·∫Øt ESP
local function toggleESP(Value)
    espEnabled = Value -- Tr·∫°ng th√°i toggle s·∫Ω quy·∫øt ƒë·ªãnh b·∫≠t/t·∫Øt ESP

    if espEnabled then
        -- Th√™m ESP cho t·∫•t c·∫£ ng∆∞·ªùi ch∆°i hi·ªán t·∫°i
        for _, player in pairs(game.Players:GetPlayers()) do
            if player ~= game.Players.LocalPlayer then
                createESP(player)
            end
        end

        -- L·∫Øng nghe ng∆∞·ªùi ch∆°i m·ªõi tham gia
        connections["PlayerAdded"] = game.Players.PlayerAdded:Connect(function(player)
            if espEnabled then createESP(player) end
        end)
    else
        -- X√≥a to√†n b·ªô ESP khi t·∫Øt
        for _, player in pairs(game.Players:GetPlayers()) do
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                for _, gui in pairs(player.Character.HumanoidRootPart:GetChildren()) do
                    if gui:IsA("BillboardGui") then gui:Destroy() end
                end
            end
        end

        -- Ng·∫Øt t·∫•t c·∫£ k·∫øt n·ªëi
        for _, conn in pairs(connections) do
            if conn and typeof(conn) == "RBXScriptConnection" then
                conn:Disconnect()
            end
        end
        connections = {}
    end
end

-- T·∫°o Tab v√† Toggle ƒë·ªÉ b·∫≠t/t·∫Øt ESP
local ESP_Tab = Window:CreateTab("üî•ESP", nil)  -- T·∫°o Tab 
local Toggle = ESP_Tab:CreateToggle({
   Name = "ESP PLAYER",
   CurrentValue = false,
   Flag = "ESP_Toggle",  -- C·ªù l∆∞u tr·ªØ tr·∫°ng th√°i toggle
   Callback = function(Value)
        toggleESP(Value)  -- G·ªçi h√†m b·∫≠t/t·∫Øt ESP khi toggle thay ƒë·ªïi
   end,
})






local espFruitEnabled = false
local fruitLabelVI = nil
local fruitLabelEN = nil

-- H√†m ph√°t hi·ªán ng√¥n ng·ªØ c·ªßa game
local function getGameLanguage()
    local locale = game.LocalizationService.RobloxLocaleId
    if locale:find("en") then
        return "en" -- Ti·∫øng Anh
    else
        return "vi" -- Ti·∫øng Vi·ªát (m·∫∑c ƒë·ªãnh)
    end
end

-- H√†m t√¨m tr√°i c√¢y trong nhi·ªÅu th∆∞ m·ª•c kh√°c nhau
local function findClosestFruit()
    local localPlayer = game.Players.LocalPlayer
    if not localPlayer or not localPlayer.Character or not localPlayer.Character:FindFirstChild("HumanoidRootPart") then return nil, math.huge end

    local closestFruit = nil
    local closestDistance = math.huge
    local humanoidRootPart = localPlayer.Character.HumanoidRootPart

    local function checkFolder(folder)
        for _, fruit in pairs(folder:GetChildren()) do
            if (fruit:IsA("Tool") or fruit:IsA("Model") or fruit:IsA("Part")) and fruit:FindFirstChild("Handle") then
                local distance = (humanoidRootPart.Position - fruit.Handle.Position).Magnitude
                if distance < closestDistance then
                    closestFruit = fruit
                    closestDistance = distance
                end
            end
        end
    end

    -- Ki·ªÉm tra trong c√°c th∆∞ m·ª•c c√≥ th·ªÉ ch·ª©a tr√°i c√¢y
    checkFolder(game.Workspace)
    if game.Workspace:FindFirstChild("Fruits") then
        checkFolder(game.Workspace.Fruits)
    end
    if game.ReplicatedStorage:FindFirstChild("Fruits") then
        checkFolder(game.ReplicatedStorage.Fruits)
    end

    return closestFruit, closestDistance
end

-- C·∫≠p nh·∫≠t UI hi·ªÉn th·ªã kho·∫£ng c√°ch ƒë·∫øn tr√°i c√¢y g·∫ßn nh·∫•t
local function updateFruitESP()
    if not espFruitEnabled then return end

    local closestFruit, closestDistance = findClosestFruit()

    -- X√°c ƒë·ªãnh ng√¥n ng·ªØ hi·ªÉn th·ªã
    local lang = getGameLanguage()

    if closestFruit then
        if lang == "vi" and fruitLabelVI then
            fruitLabelVI.Text = string.format("ƒê√£ ph√°t hi·ªán tr√°i c√¢y: C√°ch ƒë√¢y %dm", math.floor(closestDistance))
            fruitLabelEN.Text = ""
        elseif lang == "en" and fruitLabelEN then
            fruitLabelEN.Text = string.format("FRUIT DETECTED: %dm away.", math.floor(closestDistance))
            fruitLabelVI.Text = ""
        end
    else
        if fruitLabelVI then fruitLabelVI.Text = "" end
        if fruitLabelEN then fruitLabelEN.Text = "" end
    end
end

-- H√†m b·∫≠t/t·∫Øt ESP tr√°i c√¢y
local function toggleFruitESP(Value)
    espFruitEnabled = Value

    if espFruitEnabled then
        if not fruitLabelVI or not fruitLabelEN then
            local gui = Instance.new("ScreenGui")
            gui.Parent = game.Players.LocalPlayer:FindFirstChildOfClass("PlayerGui") or game.CoreGui

            -- Ti·∫øng Vi·ªát
            fruitLabelVI = Instance.new("TextLabel")
            fruitLabelVI.Size = UDim2.new(0, 500, 0, 50)
            fruitLabelVI.Position = UDim2.new(0.5, -250, 0.56, 0)
            fruitLabelVI.BackgroundTransparency = 1
            fruitLabelVI.TextColor3 = Color3.new(1, 1, 1)
            fruitLabelVI.TextStrokeTransparency = 0
            fruitLabelVI.TextStrokeColor3 = Color3.new(0, 0, 0)
            fruitLabelVI.TextSize = 30
            fruitLabelVI.Font = Enum.Font.SourceSansBold
            fruitLabelVI.Text = ""
            fruitLabelVI.Parent = gui

            -- Ti·∫øng Anh
            fruitLabelEN = Instance.new("TextLabel")
            fruitLabelEN.Size = UDim2.new(0, 500, 0, 50)
            fruitLabelEN.Position = UDim2.new(0.5, -250, 0.56, 0)
            fruitLabelEN.BackgroundTransparency = 1
            fruitLabelEN.TextColor3 = Color3.new(1, 1, 1)
            fruitLabelEN.TextStrokeTransparency = 0
            fruitLabelEN.TextStrokeColor3 = Color3.new(0, 0, 0)
            fruitLabelEN.TextSize = 30
            fruitLabelEN.Font = Enum.Font.SourceSansBold
            fruitLabelEN.Text = ""
            fruitLabelEN.Parent = gui
        end

        spawn(function()
            while espFruitEnabled do
                updateFruitESP()
                wait(0.5)
            end
            if fruitLabelVI then fruitLabelVI.Text = "" end
            if fruitLabelEN then fruitLabelEN.Text = "" end
        end)
    else
        if fruitLabelVI then fruitLabelVI.Text = "" end
        if fruitLabelEN then fruitLabelEN.Text = "" end
    end
end

-- S·ª≠ d·ª•ng CreateToggle ƒë·ªÉ thay th·∫ø n√∫t
local Toggle = ESP_Tab:CreateToggle({
    Name = "FRUIT NOTIFIER",
    CurrentValue = false,
    Flag = "FruitToggle", -- Flag ƒë·ªÉ l∆∞u tr·∫°ng th√°i b·∫≠t/t·∫Øt
    Callback = function(Value)
        toggleFruitESP(Value)  -- G·ªçi h√†m b·∫≠t/t·∫Øt ESP tr√°i c√¢y v·ªõi gi√° tr·ªã c·ªßa Toggle
    end,
})


local Hop_Tab = Window:CreateTab("üé≠Server hop", nil)


local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local PlaceId = game.PlaceId

local function switchServer()
    local success, servers = pcall(function()
        return HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/" .. PlaceId .. "/servers/Public?sortOrder=Asc&limit=100"))
    end)

    if success and servers and servers.data then  
        for _, server in pairs(servers.data) do  
            if server.id ~= game.JobId and server.playing >= 7 and server.playing <= 8 then  
                TeleportService:TeleportToPlaceInstance(PlaceId, server.id, game.Players.LocalPlayer)  
                return  
            end  
        end  
    end
end

-- T·∫°o Toggle ƒë·ªÉ ƒë·ªïi server
local Toggle = Hop_Tab:CreateToggle({
    Name = "T√¨m full moon",
    CurrentValue = false,
    Flag = "Toggle1",
    Callback = function(Value)
        if Value then
            switchServer()
        end
    end,
})



local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local PlaceId = game.PlaceId

local function switchServer()
    local success, servers = pcall(function()
        return HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/" .. PlaceId .. "/servers/Public?sortOrder=Asc&limit=100"))
    end)

    if success and servers and servers.data then  
        for _, server in pairs(servers.data) do  
            if server.id ~= game.JobId and server.playing >= 7 and server.playing <= 8 then  
                TeleportService:TeleportToPlaceInstance(PlaceId, server.id, game.Players.LocalPlayer)  
                return  
            end  
        end  
    end
end

-- T·∫°o Toggle ƒë·ªÉ ƒë·ªïi server
local Toggle = Hop_Tab:CreateToggle({
    Name = "T√¨m r√¢u ƒëen",
    CurrentValue = false,
    Flag = "Toggle2",
    Callback = function(Value)
        if Value then
            switchServer()
        end
    end,
})


local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local PlaceId = game.PlaceId

local function switchServer()
    local success, servers = pcall(function()
        return HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/" .. PlaceId .. "/servers/Public?sortOrder=Asc&limit=100"))
    end)

    if success and servers and servers.data then  
        for _, server in pairs(servers.data) do  
            if server.id ~= game.JobId and server.playing >= 7 and server.playing <= 8 then  
                TeleportService:TeleportToPlaceInstance(PlaceId, server.id, game.Players.LocalPlayer)  
                return  
            end  
        end  
    end
end

-- T·∫°o Toggle ƒë·ªÉ ƒë·ªïi server
local Toggle = Hop_Tab:CreateToggle({
    Name = "T√¨m Katakuri",
    CurrentValue = false,
    Flag = "Toggle3",
    Callback = function(Value)
        if Value then
            switchServer()
        end
    end,
})



local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local PlaceId = game.PlaceId

local function switchServer()
    local success, servers = pcall(function()
        return HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/" .. PlaceId .. "/servers/Public?sortOrder=Asc&limit=100"))
    end)

    if success and servers and servers.data then  
        for _, server in pairs(servers.data) do  
            if server.id ~= game.JobId and server.playing >= 7 and server.playing <= 8 then  
                TeleportService:TeleportToPlaceInstance(PlaceId, server.id, game.Players.LocalPlayer)  
                return  
            end  
        end  
    end
end

-- T·∫°o Toggle ƒë·ªÉ ƒë·ªïi server
local Toggle = Hop_Tab:CreateToggle({
    Name = "T√¨m rip_indra",
    CurrentValue = false,
    Flag = "Toggle4",
    Callback = function(Value)
        if Value then
            switchServer()
        end
    end,
})


local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local PlaceId = game.PlaceId

local function switchServer()
    local success, servers = pcall(function()
        return HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/" .. PlaceId .. "/servers/Public?sortOrder=Asc&limit=100"))
    end)

    if success and servers and servers.data then  
        for _, server in pairs(servers.data) do  
            if server.id ~= game.JobId and server.playing >= 7 and server.playing <= 8 then  
                TeleportService:TeleportToPlaceInstance(PlaceId, server.id, game.Players.LocalPlayer)  
                return  
            end  
        end  
    end
end

-- T·∫°o Toggle ƒë·ªÉ ƒë·ªïi server
local Toggle = Hop_Tab:CreateToggle({
    Name = "T√¨m qu√°i l∆∞·ª°i h√£i",
    CurrentValue = false,
    Flag = "Toggle5",
    Callback = function(Value)
        if Value then
            switchServer()
        end
    end,
})



local TPTab = Window:CreateTab("üé≤ Misc", nil) -- Title, Image